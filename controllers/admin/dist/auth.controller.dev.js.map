{"version":3,"sources":["auth.controller.js"],"names":["md5","require","Account","systemConfig","module","exports","login","req","res","render","pageTitle","loginPost","email","body","password","findOne","deleted","user","flash","redirect","status","cookie","token","prefixAdmin","logout","clearCookie"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,4BAAD,CAAvB;;AAEA,IAAME,YAAY,GAAGF,OAAO,CAAC,qBAAD,CAA5B,C,CAEA;;;AACAG,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AACrBA,UAAAA,GAAG,CAACC,MAAJ,CAAW,wBAAX,EAAqC;AACnCC,YAAAA,SAAS,EAAE;AADwB,WAArC;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAMA;;;AACAN,MAAM,CAACC,OAAP,CAAeM,SAAf,GAA2B,kBAAOJ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBI,UAAAA,KADmB,GACXL,GAAG,CAACM,IAAJ,CAASD,KADE;AAEnBE,UAAAA,QAFmB,GAERP,GAAG,CAACM,IAAJ,CAASC,QAFD;AAAA;AAAA,0CAINZ,OAAO,CAACa,OAAR,CAAgB;AACjCH,YAAAA,KAAK,EAAEA,KAD0B;AAEjCI,YAAAA,OAAO,EAAE;AAFwB,WAAhB,CAJM;;AAAA;AAInBC,UAAAA,IAJmB;;AAAA,cASrBA,IATqB;AAAA;AAAA;AAAA;;AAUvBV,UAAAA,GAAG,CAACW,KAAJ,CAAU,OAAV,EAAmB,sBAAnB;AACAV,UAAAA,GAAG,CAACW,QAAJ,CAAa,MAAb;AAXuB;;AAAA;AAAA,gBAetBnB,GAAG,CAACc,QAAD,CAAH,IAAiBG,IAAI,CAACH,QAfA;AAAA;AAAA;AAAA;;AAgBvBP,UAAAA,GAAG,CAACW,KAAJ,CAAU,OAAV,EAAmB,eAAnB;AACAV,UAAAA,GAAG,CAACW,QAAJ,CAAa,MAAb;AAjBuB;;AAAA;AAAA,gBAqBtBF,IAAI,CAACG,MAAL,IAAe,QArBO;AAAA;AAAA;AAAA;;AAsBvBb,UAAAA,GAAG,CAACW,KAAJ,CAAU,OAAV,EAAmB,yBAAnB;AACAV,UAAAA,GAAG,CAACW,QAAJ,CAAa,MAAb;AAvBuB;;AAAA;AA2BzBX,UAAAA,GAAG,CAACa,MAAJ,CAAW,OAAX,EAAoBJ,IAAI,CAACK,KAAzB;AAEAd,UAAAA,GAAG,CAACW,QAAJ,YAAiBhB,YAAY,CAACoB,WAA9B;;AA7ByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B,C,CAgCA;;;AACAnB,MAAM,CAACC,OAAP,CAAemB,MAAf,GAAwB,kBAAOjB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AACtBA,UAAAA,GAAG,CAACiB,WAAJ,CAAgB,OAAhB;AACAjB,UAAAA,GAAG,CAACW,QAAJ,YAAiBhB,YAAY,CAACoB,WAA9B;;AAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["const md5 = require(\"md5\");\nconst Account = require(\"../../models/account.model\");\n\nconst systemConfig = require(\"../../config/system\");\n\n// [GET] /admin/auth/login\nmodule.exports.login = async (req, res) => {\n  res.render(\"admin/pages/auth/login\", {\n    pageTitle: \"Đăng nhập\",\n  });\n};\n\n// [POST] /admin/auth/login\nmodule.exports.loginPost = async (req, res) => {\n  const email = req.body.email;\n  const password = req.body.password;\n  \n  const user = await Account.findOne({\n    email: email,\n    deleted: false\n  });\n\n  if(!user) {\n    req.flash(\"error\", \"Email không tồn tại!\");\n    res.redirect(\"back\");\n    return;\n  }\n\n  if(md5(password) != user.password) {\n    req.flash(\"error\", \"Sai mật khẩu!\");\n    res.redirect(\"back\");\n    return;\n  }\n\n  if(user.status != \"active\") {\n    req.flash(\"error\", \"Tài khoản đang bị khóa!\");\n    res.redirect(\"back\");\n    return;\n  }\n\n  res.cookie(\"token\", user.token);\n  \n  res.redirect(`/${systemConfig.prefixAdmin}/dashboard`);\n};\n\n// [GET] /admin/auth/logout\nmodule.exports.logout = async (req, res) => {\n  res.clearCookie(\"token\");\n  res.redirect(`/${systemConfig.prefixAdmin}/auth/login`);\n};"],"file":"auth.controller.dev.js"}