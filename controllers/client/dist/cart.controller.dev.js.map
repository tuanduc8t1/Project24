{"version":3,"sources":["cart.controller.js"],"names":["Cart","require","Product","module","exports","index","req","res","findOne","_id","cookies","cartId","cart","totalPrice","products","item","product_id","select","infoProduct","priceNew","price","discountPercentage","toFixed","quantity","render","pageTitle","cartDetail","addPost","productId","params","parseInt","body","existProductInCart","find","quantityUpdate","updateOne","$set","objectCart","$push","flash","redirect","deleteItem","$pull","updateItem"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,yBAAD,CAApB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,4BAAD,CAAvB,C,CAEA;;;AACAE,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACFP,IAAI,CAACQ,OAAL,CAAa;AAC9BC,YAAAA,GAAG,EAAEH,GAAG,CAACI,OAAJ,CAAYC;AADa,WAAb,CADE;;AAAA;AACfC,UAAAA,IADe;AAKrBA,UAAAA,IAAI,CAACC,UAAL,GAAkB,CAAlB;AALqB;AAAA;AAAA;AAAA;AAAA,sBAOFD,IAAI,CAACE,QAPH;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOVC,UAAAA,IAPU;AAAA;AAAA,0CAQOb,OAAO,CAACM,OAAR,CAAgB;AACxCC,YAAAA,GAAG,EAAEM,IAAI,CAACC;AAD8B,WAAhB,EAEvBC,MAFuB,CAEhB,qDAFgB,CARP;;AAAA;AAQbC,UAAAA,WARa;AAYnBA,UAAAA,WAAW,CAACC,QAAZ,GAAuB,CAACD,WAAW,CAACE,KAAZ,IAAqB,MAAMF,WAAW,CAACG,kBAAvC,IAA2D,GAA5D,EAAiEC,OAAjE,CAAyE,CAAzE,CAAvB;AAEAJ,UAAAA,WAAW,CAACL,UAAZ,GAAyBK,WAAW,CAACC,QAAZ,GAAuBJ,IAAI,CAACQ,QAArD;AAEAX,UAAAA,IAAI,CAACC,UAAL,IAAmBK,WAAW,CAACL,UAA/B;AAEAE,UAAAA,IAAI,CAACG,WAAL,GAAmBA,WAAnB;;AAlBmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAqBrBX,UAAAA,GAAG,CAACiB,MAAJ,CAAW,yBAAX,EAAsC;AACpCC,YAAAA,SAAS,EAAE,UADyB;AAEpCC,YAAAA,UAAU,EAAEd;AAFwB,WAAtC;;AArBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CA2BA;;;AACAT,MAAM,CAACC,OAAP,CAAeuB,OAAf,GAAyB,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBqB,UAAAA,SADiB,GACLtB,GAAG,CAACuB,MAAJ,CAAWD,SADN;AAEjBL,UAAAA,QAFiB,GAENO,QAAQ,CAACxB,GAAG,CAACyB,IAAJ,CAASR,QAAV,CAFF;AAGjBZ,UAAAA,MAHiB,GAGRL,GAAG,CAACI,OAAJ,CAAYC,MAHJ;AAAA;AAAA;AAAA,0CAMFX,IAAI,CAACQ,OAAL,CAAa;AAC9BC,YAAAA,GAAG,EAAEE;AADyB,WAAb,CANE;;AAAA;AAMfC,UAAAA,IANe;AAUfoB,UAAAA,kBAVe,GAUMpB,IAAI,CAACE,QAAL,CAAcmB,IAAd,CAAmB,UAAAlB,IAAI;AAAA,mBAAIA,IAAI,CAACC,UAAL,IAAmBY,SAAvB;AAAA,WAAvB,CAVN;;AAAA,eAYlBI,kBAZkB;AAAA;AAAA;AAAA;;AAabE,UAAAA,cAba,GAaIF,kBAAkB,CAACT,QAAnB,GAA8BA,QAblC;AAAA;AAAA,0CAebvB,IAAI,CAACmC,SAAL,CAAe;AACnB1B,YAAAA,GAAG,EAAEE,MADc;AAEnB,mCAAuBiB;AAFJ,WAAf,EAGH;AACDQ,YAAAA,IAAI,EAAE;AAAE,qCAAuBF;AAAzB;AADL,WAHG,CAfa;;AAAA;AAAA;AAAA;;AAAA;AAsBbG,UAAAA,UAtBa,GAsBA;AACjBrB,YAAAA,UAAU,EAAEY,SADK;AAEjBL,YAAAA,QAAQ,EAAEA;AAFO,WAtBA;AAAA;AAAA,0CA2BbvB,IAAI,CAACmC,SAAL,CAAe;AACnB1B,YAAAA,GAAG,EAAEE;AADc,WAAf,EAEH;AACD2B,YAAAA,KAAK,EAAE;AAAExB,cAAAA,QAAQ,EAAEuB;AAAZ;AADN,WAFG,CA3Ba;;AAAA;AAiCrB/B,UAAAA,GAAG,CAACiC,KAAJ,CAAU,SAAV,EAAqB,gCAArB;AAjCqB;AAAA;;AAAA;AAAA;AAAA;AAmCrBjC,UAAAA,GAAG,CAACiC,KAAJ,CAAU,OAAV,EAAmB,8CAAnB;;AAnCqB;AAsCvBhC,UAAAA,GAAG,CAACiC,QAAJ,CAAa,MAAb;;AAtCuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB,C,CA0CA;;;AACArC,MAAM,CAACC,OAAP,CAAeqC,UAAf,GAA4B,kBAAOnC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBqB,UAAAA,SADoB,GACRtB,GAAG,CAACuB,MAAJ,CAAWD,SADH;AAEpBjB,UAAAA,MAFoB,GAEXL,GAAG,CAACI,OAAJ,CAAYC,MAFD;AAAA;AAAA,0CAIpBX,IAAI,CAACmC,SAAL,CAAe;AACnB1B,YAAAA,GAAG,EAAEE;AADc,WAAf,EAEH;AACD+B,YAAAA,KAAK,EAAE;AAAE5B,cAAAA,QAAQ,EAAE;AAAEE,gBAAAA,UAAU,EAAEY;AAAd;AAAZ;AADN,WAFG,CAJoB;;AAAA;AAU1BtB,UAAAA,GAAG,CAACiC,KAAJ,CAAU,SAAV,EAAqB,gCAArB;AAEAhC,UAAAA,GAAG,CAACiC,QAAJ,CAAa,MAAb;;AAZ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B,C,CAeA;;;AACArC,MAAM,CAACC,OAAP,CAAeuC,UAAf,GAA4B,kBAAOrC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBqB,UAAAA,SADoB,GACRtB,GAAG,CAACuB,MAAJ,CAAWD,SADH;AAEpBL,UAAAA,QAFoB,GAETO,QAAQ,CAACxB,GAAG,CAACuB,MAAJ,CAAWN,QAAZ,CAFC;AAGpBZ,UAAAA,MAHoB,GAGXL,GAAG,CAACI,OAAJ,CAAYC,MAHD;AAAA;AAAA,0CAKpBX,IAAI,CAACmC,SAAL,CAAe;AACnB1B,YAAAA,GAAG,EAAEE,MADc;AAEnB,mCAAuBiB;AAFJ,WAAf,EAGH;AACDQ,YAAAA,IAAI,EAAE;AAAE,qCAAuBb;AAAzB;AADL,WAHG,CALoB;;AAAA;AAY1BjB,UAAAA,GAAG,CAACiC,KAAJ,CAAU,SAAV,EAAqB,+BAArB;AAEAhC,UAAAA,GAAG,CAACiC,QAAJ,CAAa,MAAb;;AAd0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B","sourcesContent":["const Cart = require(\"../../models/cart.model\");\r\nconst Product = require(\"../../models/product.model\");\r\n\r\n// [GET] /cart/\r\nmodule.exports.index = async (req, res) => {\r\n  const cart = await Cart.findOne({\r\n    _id: req.cookies.cartId\r\n  });\r\n\r\n  cart.totalPrice = 0;\r\n\r\n  for (const item of cart.products) {\r\n    const infoProduct = await Product.findOne({\r\n      _id: item.product_id\r\n    }).select(\"thumbnail title price discountPercentage stock slug\");\r\n\r\n    infoProduct.priceNew = (infoProduct.price * (100 - infoProduct.discountPercentage)/100).toFixed(0);\r\n\r\n    infoProduct.totalPrice = infoProduct.priceNew * item.quantity;\r\n\r\n    cart.totalPrice += infoProduct.totalPrice;\r\n\r\n    item.infoProduct = infoProduct;\r\n  }\r\n\r\n  res.render(\"client/pages/cart/index\", {\r\n    pageTitle: \"Giỏ hàng\",\r\n    cartDetail: cart\r\n  });\r\n};\r\n\r\n// [POST] /cart/add/:productId\r\nmodule.exports.addPost = async (req, res) => {\r\n  const productId = req.params.productId;\r\n  const quantity = parseInt(req.body.quantity);\r\n  const cartId = req.cookies.cartId;\r\n\r\n  try {\r\n    const cart = await Cart.findOne({\r\n      _id: cartId\r\n    });\r\n\r\n    const existProductInCart = cart.products.find(item => item.product_id == productId);\r\n\r\n    if(existProductInCart) {\r\n      const quantityUpdate = existProductInCart.quantity + quantity;\r\n      \r\n      await Cart.updateOne({\r\n        _id: cartId,\r\n        \"products.product_id\": productId\r\n      }, {\r\n        $set: { \"products.$.quantity\": quantityUpdate }\r\n      });\r\n    } else {\r\n      const objectCart = {\r\n        product_id: productId,\r\n        quantity: quantity,\r\n      };\r\n  \r\n      await Cart.updateOne({\r\n        _id: cartId\r\n      }, {\r\n        $push: { products: objectCart }\r\n      });\r\n    }\r\n    req.flash(\"success\", \"Đã thêm sản phẩm vào giỏ hàng.\");\r\n  } catch (error) {\r\n    req.flash(\"error\", \"Thêm sản phẩm vào giỏ hàng không thành công!\");\r\n  }\r\n\r\n  res.redirect(\"back\");\r\n};\r\n\r\n\r\n// [GET] /cart/delete/:productId\r\nmodule.exports.deleteItem = async (req, res) => {\r\n  const productId = req.params.productId;\r\n  const cartId = req.cookies.cartId;\r\n  \r\n  await Cart.updateOne({\r\n    _id: cartId\r\n  }, {\r\n    $pull: { products: { product_id: productId } }\r\n  });\r\n\r\n  req.flash(\"success\", \"Đã xóa sản phẩm khỏi giỏ hàng!\");\r\n\r\n  res.redirect(\"back\");\r\n}\r\n\r\n// [GET] /cart/update/:productId/:quantity\r\nmodule.exports.updateItem = async (req, res) => {\r\n  const productId = req.params.productId;\r\n  const quantity = parseInt(req.params.quantity);\r\n  const cartId = req.cookies.cartId;\r\n  \r\n  await Cart.updateOne({\r\n    _id: cartId,\r\n    \"products.product_id\": productId\r\n  }, {\r\n    $set: { \"products.$.quantity\": quantity }\r\n  });\r\n\r\n  req.flash(\"success\", \"Cập nhật sản phẩm thành công!\");\r\n\r\n  res.redirect(\"back\");\r\n}"],"file":"cart.controller.dev.js"}